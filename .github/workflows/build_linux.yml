name: Build Linux

on:
  workflow_call:
    inputs:
      releaseVersion:
        required: true
        type: string
      artifactArchive:
        required: true
        type: string

jobs:
  build_linux:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Install required packages
        run: |
          sudo apt -y install build-essential scons
      
      - name: Init custom.py
        run: |
          cp ${{ github.workspace }}/.github/workflows/custom_linux.py custom.py
      
      - name: Build
        run: scons -j 14 version=${{ inputs.releaseVersion }} build archive
      
      - name: Distribute Example
        id: distribute
        uses: LordOfDragons/build-delga@v1
        with:
          projectFile: 'dragengine/example/example.degp'
          profile: 'Release'
        
      - name: Archive Examples
        run: |
          mkdir Examples
          cp LICENSE Examples
          cp README.md Examples
          cp -a cpp/example/build/denetworkcpp_example Examples
          cp -a java/example/build/DENetworkExample-${{ inputs.releaseVersion }}.jar Examples
          cp -a python/build/example/denetworkpythonexample-${{ inputs.releaseVersion }}.zip Examples
          cp -a dragengine/example/distribute/DENetworkExample.delga Examples
          zip -r examples.zip Examples
        
      - name: Move Artifacts
        run: |
          mkdir artifacts
          cp -a cpp/library/build/denetworkcpp-unix-x64-${{ inputs.releaseVersion }}.zip artifacts
          cp -a java/library/build/denetworkjava-${{ inputs.releaseVersion }}.zip artifacts
          cp -a python/build/library/denetworkpython-${{ inputs.releaseVersion }}.zip artifacts
          cp -a examples.zip artifacts
        
      - name: Store Archives
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.artifactArchive }}
          path: |
            artifacts/denetworkcpp-unix-x64-${{ inputs.releaseVersion }}.zip
            artifacts/denetworkjava-${{ inputs.releaseVersion }}.zip
            artifacts/denetworkpython-${{ inputs.releaseVersion }}.zip
            artifacts/examples.zip
          if-no-files-found: error
